<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAFwAAAAuCAMAAACS246gAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAtUExURe7u7vPz8+3t7evr6+/v7/Hx8ezs7PDw8Ojo6Orq6unp6fLy8vT09PX19fb29skaFxsA
        AALySURBVFhHtZdRkqQgEAURRFFx73/cJSejAmf+MWJjbbpIqPeKoieltI0n51L2fdtqTamU4zjPbTvP
        Ulo7jlq3bd9Lua77TukZT0r3fV3E936e93hq7eM5jvue8aWshYu+fp7ned/eUwL5POIJ5z2l6wr0dcVW
        ALGdlM6T8UC7kdVw0DmfZ84p9e5npoonzCm1ii4lZz8f4yFK0b5oN7IWjjmlYM3zYOVEk2qkCATLtJK3
        3nO+79ZyZi7jf9GMroSbEq9YQ1mJZqrh2qoUyFQKaEb3/TiQVAG/aBYcvKXw52EAQ7XLcuNQMfGL5z2i
        LT8WYRPiv2jiBm0xHDlikGGKkamKMPGtlWLqGBkWCxc30Qg8trAUbkp+EdYggq2AqaXYxr5tydYWbS7k
        +qIxfi08kHypNZYhpcfBAgme0mJZUSGVcbE5i8EWV+u+r4UzOfAcp8CDoTxpT9Egege377HQlEk0MVwe
        Nu+xzFJ4rSYHHoNMrlYamFeCMnEoaqU0tfeLBqeV/OPwETMa11K4gcjR+/tuG7bylUjLUJlYTtxEU4II
        GFYabTsbW10K56N4W1cAJx5BuEhChonuHUkw+0eEn6OD3eBpEGvhNiMmkBwmupxIR+La+4um5XHRIShN
        DvGMpkxaWwtXhudh0kTz7mWAICRLmX3RLAcE8zAyTI1CBL8WTnAguez4nwN/HAj2jifnkeAo2d9o2q4C
        UKIwvDyI8OfGKMWlcBKjbDgQAWAxWgFHPT7/RVN2YTVGznZmibDUWrjSh60eheMgQcZJWNxvtIWLdErD
        4gjEOBFsefyoXgp3WAspuEgMPJfAlCTalqNIWKubQpApL9vS4rVw5ZjSACJdjgSgGImD5JWGfVxksbjb
        c1OwaNDr4dflUHytCHH1iW4NxPuKjiM1DXVrUxLf1sKvqzWSnHiFCDzjvPPG4RZNAyZWNKL540g0pfzv
        32jIS+Fah6WGmR54w7yEQdqiJhpbndMaUe8baOePvyPWwVP6Dx54X0minrDcAAAAAElFTkSuQmCC
</value>
  </data>
</root>