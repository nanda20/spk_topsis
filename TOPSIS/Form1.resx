<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACIAAAAiCAYAAAA6RwvCAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        xAAADsQBlSsOGwAABsBJREFUWEe1mOtPVGcQxvlXTL1hVUDuCEJtqzXVxJi0X7w0NmiqhhqaVKPRYKrV
        GNPaNH6qRqMS+SCQWpHUL8ZUo1iLu4hcRPYG7H3ZXfbK7gLTeebsuxfYNdbQSYYcDrvn/Z15npnzHgoo
        R8zMzFAsFqPp6elFzUQiQbOzszQ3N5dcKR1ZIGazmfR6PQ0NDS16Dg8PU19fn6TL5ZIbzQRKgeADHo8n
        +dv/F6hMT08PDQ4OUjgcTsEIiN1uJ6vVKidU6STlzOJHPB6n7u5uqRQqgxAQyIGAN7ScFaAsqCT5YkVv
        by+1tbWR1+uVaxdgMciCdeLxhBhKMg/UYgX82NLSQhaLRa5dgMVQkRn+JRaLU4zLhtLNh1Lhdrvp3t27
        1Hr9Ot3p7CQLX/B9AiCHDh0SE4OhAIvq9TpZTGszblvWLRMKYTQaace2bbRmxQqqLCmhqtJSqly3jopW
        raKPN2ygp0+eyOfeNVCJffv20cDAgNxsEkQvFYhEoxSNTlOUgZCAQnS2t1PhBx9Qw/r1smhtZSVVl5XR
        +ooK2lhXRx/V1tLq5cvp3Jkz8vl38RRAGhsbF4JMcwXCkQhnlCJIhkL0PH1Kq5YupU/q66muqoqrUEJn
        T5+mW62t9MtPPwtcDUN92tBAxVyd61evyvcyfSUpZ9ORE0THIKhEKBSmEPd2KBwRGAQkwF3X8t3v3b1b
        zs2PUydPUkVxscB+uGyZXAuRrwMRC0ASANHppRKBYIiCSAaamZ2je11dVF5UJKXfvHGjXAC+iUC+pITw
        EqJx716qr66W6vx68aKcE6MjBSgNhVgIwj90Op1UYSoQlAwEg/LhY0eOUB37oYpN2fXHXSlvmD83X8JZ
        hn7z5g2VrV0rUn25Y4d8P7MD4xlQCHM+kEAwTP6pQCoRX+3cSfU1NVTKC5jNFukmVEvJp6BQIYTqIJgZ
        kasDAYVA+y4A0TMIKuH1TZHPryXi6z17BAR3+vr1CEsRy5BPkxC+UsaGWeGnBv4OYn4HalAxmmWf5Abh
        OeLjKkx6fTTp8zOQn0s4Rz+0nJK7qykvpyu/XRZpUvKJhCFJDMNHfz2iCp4vAFemzpRPoJJg8EpOEHQN
        quGZ9HIyDAMFueyPHz2mdatXS7mxCORAmyv5pgKBlCyfsZlhanRZ640b3B2UllA8pXUioOKJGTKZTLk8
        oieP108uzyS5kQLklQW2bt4sBsQiKHl/f7+cV3PB4XDS9q1bZcagfWFsBABUB2aOBfgKfskD8kIWd7o8
        5HR7yOWeFCifP8DuHqO1K1eK9khU6PNNm6jp4EH6Yvt28QVAMdCQmDcnjh0XGE06TUIFhYRfjLlBdAww
        SQ6nmxwuNwMhNShI9OrVgAysmvIykQlA8AKqpCZuNUuCY8Bg9nzf/J3AKE+Jr5JQkNPEz66cIA5e2OZw
        kR3pdGVB+aeCfCcROvfjWXnGoCpYrHTNGsmWEyeo+143FRUWpmAqSorpW66agkn7KigmNuQCQfsCwGp3
        kM3uZCBkNhTkCkWmCXPRYDTR8+e9NMwtzc3Fms9Qgv8Ac+PpjKoBBk/nb3gxBCDUaIA8RoORn745KmJl
        gAmbndNBViRD4ZwG5cyCgp/Q5pMwOPyU9FU0lqBnz/4WTykYdBHmEcyNsYCEPAajIXsbgB8veI4AYGzC
        RuNWu2ROqCSYgrJDvpSEmqci0Rj90/tCZFIwMPT9P++LvBgNfpbHIBWZB4KKjPHilnErwyBt2VAC5tDA
        8kKlfRViD/S97OeRX8h7lnJasWQJveS2x9DEWEA3jhpyVAQggDCPTUjiWKAETEFpYG+DyvTVFD+7hoZf
        0/GjR6Ua8JcaC5AnL4iJAUyW8WRqQJlQApYTSgPTJMyGgpeC4ahUAJVSEnpYHgOD7N+/Pw2CfQJ28QaT
        hQzmMTKqTEGNvx1KwHL7Kl8H+ngcPHjwgJqamtKbZ2xURkdHSd/3UhYfBZDk26HMY/8NSnUgBiekaW5u
        pvPnz8sGCQwF2LrhFeHhw4c0MDgkElnGcWG7GHjc6tCSLzhh4xbnC1rtPHP4Dm0ON9n4DtE9dqeHS68l
        FkO6PF5JSOTGwzT5YL106RJt2bKFungHmHrBwrDBHgGvfzdv3qS2W7fozp3fqaOjg9rbke3J7KAOddyh
        zqWPU3+bd6yyk9+Brly+TLt27RKIa9euiRJZr5wgivBjemRkhG7fvk2neZd++PBhOsgj+sCBA4uSuBbk
        uHDhglQCEFhTbaZT/w3ACdChVNANJoKjFzNxTVwba2AtBYFIgajAH2EebdfNzxBuLXX8vpl5DfVakR1E
        /wI8g6Lm0X7muAAAAABJRU5ErkJggg==
</value>
  </data>
</root>